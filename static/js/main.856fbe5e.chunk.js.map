{"version":3,"sources":["styles.module.scss","Translator.js","ImageOutput.js","GameDropdown.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","root","color","Translator","props","classes","Grid","container","spacing","className","styles","TextField","label","value","valueProp","onChange","inputProp","ImageOutput","item","id","imageProp","options","key","text","icon","fill","GameDropdown","FormControl","variant","Select","gameProp","map","MenuItem","CONF","regex","App","createImage","document","getElementsByTagName","comboInput","getInputFromRegex","imagesContainer","querySelector","innerHTML","i","length","list","state","game","j","term","imgNum","image","img","createElement","src","String","hasOwnProperty","alt","appendChild","size","createTranslation","input","character","inputRegex","this","userInput","toLowerCase","split","filter","x","altImg","k","addEventListener","Container","justify","alignItems","Button","href","startIcon","e","target","setState","align","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","getElementById","URL","process","origin","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.856fbe5e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"styles_app__c-xFM\",\"title\":\"styles_title__BMLqm\",\"button\":\"styles_button__2W4ki\",\"content\":\"styles_content__1yzZG\",\"gamedropdown\":\"styles_gamedropdown__3Wk0_\",\"form\":\"styles_form__1kSdP\",\"select\":\"styles_select__1SBfB\",\"translator\":\"styles_translator__32wt7\",\"textfield\":\"styles_textfield__P-340\",\"text\":\"styles_text__1k0Ve\",\"imageoutput\":\"styles_imageoutput__hL7QL\",\"images\":\"styles_images__2ye1A\"};","import { TextField, Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport * as styles from \"./styles.module.scss\";\n\n// Material UI styling\nconst useStyles = makeStyles({\n\troot: {\n\t\t\"& > *\": {\n\t\t\tcolor: \"#ececec\",\n\t\t},\n\t},\n});\n\n// User input component\nconst Translator = (props) => {\n\tconst classes = useStyles();\n\treturn (\n\t\t<Grid container spacing={0} className={styles.translator}>\n\t\t\t<TextField classes={{ root: classes.root }} className={styles.textfield} label=\"Combo\" value={props.valueProp} onChange={props.inputProp} />\n\t\t</Grid>\n\t);\n};\n\nexport default Translator;\n","import { Grid } from \"@material-ui/core\";\nimport * as styles from \"./styles.module.scss\";\n\n// Image component\nconst ImageOutput = (props) => {\n\treturn (\n\t\t<Grid item className={styles.imageoutput}>\n\t\t\t<div id=\"images\" className={styles.images}>\n\t\t\t\t{props.imageProp}\n\t\t\t</div>\n\t\t</Grid>\n\t);\n};\n\nexport default ImageOutput;\n","import { Select, MenuItem, Grid, FormControl } from \"@material-ui/core\";\nimport * as styles from \"./styles.module.scss\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n// Options object used to give value to the <MenuItems> component\nconst options = [\n\t{ key: \"streetfighter\", text: \"Street Fighter\", value: \"streetfighter\" },\n\t{ key: \"tekken\", text: \"Tekken\", value: \"tekken\" },\n\t{ key: \"mvci\", text: \"Marvel vs Capcom: Infinite \", value: \"mvci\" },\n\t{ key: \"dbfz\", text: \"Dragon Ball FighterZ\", value: \"dbfz\" },\n\t{ key: \"bbtag\", text: \"BlazBlue Cross Tag Battle\", value: \"bbtag\" },\n\t// { key: \"samsho\", text: \"Samurai Shodown\", value: \"samsho\" },\n\t{ key: \"unib\", text: \"Under Night In-Birth\", value: \"unib\" },\n\t// { key: \"mk\", text: \"Mortal Kombat 11\", value: \"mk\" },\n\t// { key: \"sc\", text: \"Soul Calibur 6\", value: \"sc\" },\n];\n\n// Material UI styling\nconst useStyles = makeStyles({\n\ticon: {\n\t\tfill: \"#ececec\",\n\t},\n});\n\n// Drop down menu  component for games\nconst GameDropdown = (props) => {\n\t// Material UI styling\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<Grid item className={styles.gamedropdown}>\n\t\t\t<FormControl variant=\"outlined\" className={styles.form}>\n\t\t\t\t<Select onChange={props.gameProp} value={props.valueProp} className={styles.select} classes={{ root: classes.root, icon: classes.icon }}>\n\t\t\t\t\t{options.map((item) => (\n\t\t\t\t\t\t<MenuItem className={styles.menuitem} value={item.value} key={item.key}>\n\t\t\t\t\t\t\t{item.text}\n\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t))}\n\t\t\t\t</Select>\n\t\t\t</FormControl>\n\t\t</Grid>\n\t);\n};\n\nexport default GameDropdown;\n","import React, { Component } from \"react\";\n\nimport { Container, Grid, Button } from \"@material-ui/core\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport LinkIcon from \"@material-ui/icons/Link\";\n\nimport * as styles from \"./styles.module.scss\";\n\nimport Translator from \"./Translator.js\";\nimport ImageOutput from \"./ImageOutput.js\";\nimport GameDropdown from \"./GameDropdown.js\";\nimport list from \"./list.json\";\n\n/* \n \tRegex object\n\tUsed to determine the regex to be used for specific games\n\tNOTE: Many games use the same regex for now\n*/\nconst CONF = {\n\tstreetfighter: {\n\t\tregex: /(tk)\\s*|\\s*(,|>|xx)\\s*|\\+|-|\\./g,\n\t},\n\ttekken: {\n\t\tregex: /\\s|,\\s*|\\+|(\\d\\+\\d\\+\\d\\+\\d|\\d\\+\\d\\+\\d|\\d\\+\\d|\\d)/,\n\t},\n\tmvci: {\n\t\tregex: /(tk)\\s*|\\s*(,|>|xx)\\s*|\\+|-|\\./g,\n\t},\n\tdbfz: {\n\t\tregex: /(tk)\\s*|\\s*(,|>|xx)\\s*|\\+|-|\\./g,\n\t},\n\tbbtag: {\n\t\tregex: /(tk)\\s*|\\s*(,|>|xx)\\s*|\\+|-|\\./g,\n\t},\n\tunib: {\n\t\tregex: /(tk)\\s*|\\s*(,|>|xx)\\s*|\\+|-|\\./g,\n\t},\n\t// To be implemented\n\tmk: {\n\t\tregex: /(tk)\\s*|\\s*(,|>|xx)\\s*|\\+|-|\\./g,\n\t},\n\t// Needs to abe worked on\n\tsc: {\n\t\tregex: /\\s|(,|~)|(\\[[1-9]\\]|\\([1-9]\\))|([1-9])/g,\n\t},\n};\n\n// Main component\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tinput: \"\",\n\t\t\tgame: \"streetfighter\",\n\t\t\tcharacter: [\"None\", \"None\", \"None\"],\n\t\t};\n\t}\n\n\t// Return the user input using a given regex\n\tgetInputFromRegex() {\n\t\tlet game = this.state.game;\n\t\tlet userInput = this.state.input;\n\t\tlet inputRegex;\n\n\t\tswitch (game) {\n\t\t\tcase \"streetfighter\":\n\t\t\t\tinputRegex = userInput.toLowerCase().split(CONF[\"streetfighter\"].regex);\n\t\t\t\tbreak;\n\t\t\tcase \"tekken\":\n\t\t\t\tinputRegex = userInput.split(CONF[\"tekken\"].regex);\n\t\t\t\tbreak;\n\t\t\t// Uses same regex as 'streetfighter' for now\n\t\t\tcase \"mvci\":\n\t\t\tcase \"dbfz\":\n\t\t\tcase \"bbtag\":\n\t\t\tcase \"unib\":\n\t\t\t\tinputRegex = userInput.split(CONF[\"streetfighter\"].regex);\n\t\t\t\tbreak;\n\t\t\tcase \"sc\":\n\t\t\t\tinputRegex = userInput.split(CONF[\"sc\"].regex);\n\t\t\tdefault:\n\t\t\t\tinputRegex = userInput.toLowerCase().split(CONF[\"streetfighter\"].regex);\n\t\t\t\tbreak;\n\t\t}\n\t\t// Filter undefined\n\t\treturn inputRegex.filter((x) => {\n\t\t\treturn x;\n\t\t});\n\t}\n\n\t// Creates combo images from the user input\n\tcreateImage = () => {\n\t\tlet altImg = document.getElementsByTagName(\"img\");\n\t\tlet comboInput = this.getInputFromRegex();\n\t\tconst imagesContainer = document.querySelector(\"#images\");\n\n\t\t// Check if imageContainer exists\n\t\tif (imagesContainer) {\n\t\t\t// Make inner html blank after every key press (to keep array empty)\n\t\t\timagesContainer.innerHTML = \"\";\n\t\t\t// Iterate through each item in comboInput\n\t\t\tfor (let i = 0; i < comboInput.length; i++) {\n\t\t\t\t// Iterate through all keys (combo inputs) from the given game in list.json\n\t\t\t\tfor (let key in list[this.state.game]) {\n\t\t\t\t\t// Iterate through all terms in the given game\n\t\t\t\t\tfor (let j = 0; j < list[this.state.game][key].term.length; j++) {\n\t\t\t\t\t\t// Check if any of the terms matches the given comboInput\n\t\t\t\t\t\tif (list[this.state.game][key].term[j] === comboInput[i]) {\n\t\t\t\t\t\t\t// Iterate through each term and and grab the image, alt, and size values\n\t\t\t\t\t\t\t// Place the images on the page\n\t\t\t\t\t\t\tfor (let imgNum = 0; imgNum < list[this.state.game][key].image.length; imgNum++) {\n\t\t\t\t\t\t\t\tlet img = document.createElement(\"img\");\n\t\t\t\t\t\t\t\timg.src = String(list[this.state.game][key].image[imgNum]);\n\t\t\t\t\t\t\t\tif (list[this.state.game][key].hasOwnProperty(\"alt\")) {\n\t\t\t\t\t\t\t\t\timg.alt = String(list[this.state.game][key].alt[imgNum]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\timagesContainer.appendChild(img).className = String(list[this.state.game][key].size[imgNum]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.createTranslation();\n\t};\n\n\t// Creates an 'onClick' event listener for each button which changes the translation text to the image's 'alt' text\n\tcreateTranslation() {\n\t\tlet altImg = document.getElementsByTagName(\"img\");\n\n\t\tif (altImg) {\n\t\t\tfor (var k = 0; k < altImg.length; k++) {\n\t\t\t\taltImg[k].addEventListener(\"click\", function show() {\n\t\t\t\t\tdocument.querySelector(\"#text\").innerHTML = this.alt;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\t// Render react elements on page\n\trender() {\n\t\treturn (\n\t\t\t<Container className={styles.app}>\n\t\t\t\t<Grid container justify=\"space-between\" alignItems=\"center\" className={styles.title}>\n\t\t\t\t\t<h1>Combo Translator</h1>\n\t\t\t\t\t<nav>\n\t\t\t\t\t\t<Button href=\"https://github.com/dkihe/combo-translator/\" size=\"small\" startIcon={<GitHubIcon />} className={styles.button}>\n\t\t\t\t\t\t\trepo\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button href=\"https://github.com/dkihe/combo-translator/wiki\" size=\"small\" startIcon={<LinkIcon />} className={styles.button}>\n\t\t\t\t\t\t\twiki\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</nav>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid container alignItems=\"center\" className={styles.content}>\n\t\t\t\t\t<GameDropdown\n\t\t\t\t\t\tgameProp={(e) => {\n\t\t\t\t\t\t\tconst { value } = e.target;\n\t\t\t\t\t\t\tthis.setState({ game: value });\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tvalueProp={this.state.game}\n\t\t\t\t\t/>\n\t\t\t\t\t<Translator\n\t\t\t\t\t\tvalueProp={this.state.input}\n\t\t\t\t\t\tinputProp={(e) => {\n\t\t\t\t\t\t\tconst { value } = e.target;\n\t\t\t\t\t\t\tthis.setState({ input: value });\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid container spacing={0} alignItems=\"center\" justify=\"center\" align=\"center\" id=\"text\" className={styles.text}>\n\t\t\t\t\tClick an image to see a translation\n\t\t\t\t</Grid>\n\t\t\t\t<ImageOutput imageProp={this.createImage()} />\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}